# Importar bibliotecas necessárias
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from statsmodels.tsa.arima.model import ARIMA
from sklearn.metrics import mean_squared_error
from math import sqrt

# Carregar os dados do arquivo CSV
url = 'https://drive.google.com/uc?id=13SQ1N3PZtieiaVr37aK5rA8mcuQYMEHA&export=download'
df = pd.read_csv(url, parse_dates=['Date'], index_col='Date')

# Verificar o formato dos dados
print(df.head())

# Visualização 1: Evolução do preço de fechamento ao longo do tempo
plt.figure(figsize=(10,6))
plt.plot(df['Close'], label='Preço de Fechamento')
plt.title('Evolução do Preço de Fechamento das Ações do Walmart')
plt.xlabel('Ano')
plt.ylabel('Preço de Fechamento (USD)')
plt.legend()
plt.show()

# Visualização 2: Boxplot para verificar a distribuição dos preços por ano
df['Year'] = df.index.year
plt.figure(figsize=(10,6))
sns.boxplot(x='Year', y='Close', data=df)
plt.title('Distribuição dos Preços de Fechamento por Ano')
plt.xlabel('Ano')
plt.ylabel('Preço de Fechamento (USD)')
plt.show()

# Visualização 3: Correlação entre as colunas "Open", "Close", "High", "Low"
plt.figure(figsize=(8,6))
sns.heatmap(df[['Open', 'High', 'Low', 'Close']].corr(), annot=True, cmap='coolwarm')
plt.title('Matriz de Correlação entre as Variáveis de Preço')
plt.show()

# Visualização 4: Histograma dos preços de fechamento
plt.figure(figsize=(10,6))
df['Close'].plot(kind='hist', bins=50)
plt.title('Distribuição dos Preços de Fechamento')
plt.xlabel('Preço de Fechamento (USD)')
plt.ylabel('Frequência')
plt.show()

# Dividir os dados em treino e teste (80% treino, 20% teste)
train_size = int(len(df) * 0.8)
train, test = df['Close'][:train_size], df['Close'][train_size:]

# Visualização 5: Série Temporal de Treino e Teste
plt.figure(figsize=(10,6))
plt.plot(train, label='Treino')
plt.plot(test, label='Teste')
plt.title('Divisão da Série Temporal em Conjuntos de Treino e Teste')
plt.xlabel('Ano')
plt.ylabel('Preço de Fechamento (USD)')
plt.legend()
plt.show()

# Modelagem ARIMA
# Ajustando o modelo ARIMA (p=5, d=1, q=0 como exemplo)
model = ARIMA(train, order=(5,1,0))
model_fit = model.fit()

# Fazer previsões
predictions = model_fit.forecast(steps=len(test))

# Avaliar a previsão
rmse = sqrt(mean_squared_error(test, predictions))
print(f'RMSE: {rmse}')

# Visualizar Previsões
plt.figure(figsize=(10,6))
plt.plot(test, label='Real')
plt.plot(test.index, predictions, label='Previsto', color='red')
plt.title('Previsão de Preços de Ações - Modelo ARIMA')
plt.xlabel('Ano')
plt.ylabel('Preço de Fechamento (USD)')
plt.legend()
plt.show()
